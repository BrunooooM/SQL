-----Criar um database----------------------------------------
CREATE DATABASE "LBD"
TEMPLATE = TEMPLATE0
ENCODING 'WIN1252'
CONNECTION LIMIT -1;
-----------------------------------------------------------
-----------------------------------------------------------
 psql -h localhost -p 5432 -d LBD -U postgres -W


-----------------------------------------------------------------------
SELECT *  //mostrar tabela
 FROM tb_cliente;

-----Criar tabelas---------------------------------------------------
CREATE TABLE tb_cliente(
id_cliente     INTEGER,
titulo         VARCHAR(4),
nome           VARCHAR(32) CONSTRAINT nn_cliente_nome NOT NULL,
sobrenome      VARCHAR(32)
			   CONSTRAINT nn_cliente_sobrenome NOT NULL,
endereco       VARCHAR(62) CONSTRAINT nn_cliente_endereco NOT NULL,
numero         VARCHAR(5)  CONSTRAINT nn_cliente_numero NOT NULL,
complemento    VARCHAR(62),
cep            VARCHAR(10),
cidade         VARCHAR(62) CONSTRAINT nn_ciente_cidade NOT NULL,
estado         VARCHAR(2)  CONSTRAINT nn_cliente_estado NOT NULL,
fone_fixo      VARCHAR(15) CONSTRAINT nn_cliente_fone_fixo NOT NULL,
fone_movel     VARCHAR(15)
					CONSTRAINT nn_cliente_fone_movel NOT NULL,
fg_ativo       INTEGER,
CONSTRAINT pk_cliente_id_cliente PRIMARY KEY(id_cliente)
);


CREATE TABLE tb_item( //criando tabela item
	id_item			INTEGER,
	ds_item 		VARCHAR(64) CONSTRAINT nn_item_ds_item NOT NULL,
	preco_custo		NUMERIC(7,2),
	preco_venda		NUMERIC(7,2),
	fg_ativo		INTEGER,
	CONSTRAINT pk_id_item PRIMARY KEY(id_item)
);


CREATE TABLE tb_pedido(
	id_pedido		INTEGER,
	id_cliente		INTEGER CONSTRAINT nn_pedido_id_cliente NOT NULL,
	dt_compra		TIMESTAMP,
	dt_entrega		TIMESTAMP,
	valor			NUMERIC(7,2),
	fg_ativo		INTEGER,
	CONSTRAINT pk_pedido_id_pedido PRIMARY KEY(id_pedido),
	CONSTRAINT fk_pedido_id_cliente FOREIGN KEY(id_cliente) //esta referenciando a chave primaria
		REFERENCES tb_cliente(id_cliente) //esta referenciando a chave primaria	
	
);

CREATE TABLE tb_item_pedido(
	id_item			INTEGER,
	id_pedido		INTEGER
						CONSTRAINT nn_item_pedido_id_pedido NOT NULL,
	quantidade		INTEGER,
	CONSTRAINT pk_item_pedido PRIMARY KEY(id_item, id_pedido),
	CONSTRAINT fk_item_pedido_id_item FOREIGN KEY(id_item)
		REFERENCES tb_item(id_item),
	CONSTRAINT fk_item_pedido_id_pedido FOREIGN KEY(id_pedido)
		REFERENCES tb_pedido(id_pedido)
);

CREATE TABLE tb_codigo_barras(
	codigo_barras	INTEGER	
						CONSTRAINT nn_cod_barras_codigo_barras NOT NULL,
	id_item			INTEGER CONSTRAINT nn_cod_barras_id_item NOT NULL,
	CONSTRAINT fk_cod_barras_id_item FOREIGN KEY(id_item)
		REFERENCES tb_item(id_item)
);

CREATE TABLE tb_estoque(
	id_item			INTEGER,
	quantidade		INTEGER,
	CONSTRAINT pk_estoque_id_item PRIMARY KEY(id_item),
	CONSTRAINT fk_estoque_id_item FOREIGN KEY(id_item)
		REFERENCES tb_item(id_item)
);



INSERT INTO tb_cliente(id_cliente, titulo, nome, sobrenome, endereco, numero, complemento,  //inserindo valores na tabela
					   cep, cidade, estado, fone_fixo, fone_movel, fg_ativo)
VALUES
(1,'Sra', 'Jessica', 'Mendes', 'Avenida Acelino de Leao', '89', NULL, //primeira tupla
'68900 300', 'Macapá', 'AP', '3565 1243', '8765 8999', 1),

(2,'Sr', 'Andrei', 'Junqueira', 'Rua Tabaiares', '1024', NULL,  //segunda tupla
'30150 040', 'Belo Horizonte', 'MG', '3676 1209', '8876 4543', 1),

(3,'Sr', 'Alex', 'Matheus', 'Rua Eva Terpins', 's/n', NULL,   //terceira tupla
'05327 030', 'São Paulo', 'SP', '6576 0099', '9358 7676', 1);



INSERT INTO tb_cliente
VALUES
(4,'Sr', 'Andre', 'Lopes', 'Rua Fortaleza', '552', NULL,
'11436 360', 'Guaruja', 'SP', '5654 4343', '9821 4321', 1),

(5,'Sr', 'Vitor', 'Silva', 'Entrada Aguá Chata', 's/n','Rodovia 356',
 '07251 000', 'Guarulhos', 'SP', '4343 6712', '831 3411', 1),

(6,'Sr', 'Claudinei', 'Safra', 'Avenida José Osvaldo Marques', '1562', NULL,
'14173 010', 'Sertãozinho', 'SP', '3698 8100', '8131 6409', 1),

(7,'Sr', 'Ricardo', 'Ferreira', 'Alameda Assunta Barizani Tienghi', '88',NULL,
 '18046 705', 'Sorocaba', 'SP', '6534 7099', '9988 1251', 1);



INSERT INTO tb_cliente
VALUES
(8,'Sra', 'Anna', 'Kelly', 'Rua das Acacias', '1089', NULL,
'13187 042', 'Hortolândia', 'SP', '6432 440043', '9465 0023', 1),

(9,'Sra', 'Cristiane', 'Hickman', 'Rua Agenir Martinhon Scachetti', '300', NULL,
 '13341 633', 'Indaiatuba', 'SP', '3512 1243', '9987 0001', 1),

(10,'Sr', 'Marcos', 'Augusto', 'Avenida Australia', 's/n', NULL,
'06852 100', 'Itapecerica da Serra', 'SP', '3623 8821', '8891 2333', 1),

(11,'Sr', 'David', 'Silva', 'Rua Arcy Prestes Ruggeri', '24', 'Esquina do Mercado',
 '18201 720', 'Itapetininga', 'SP', '4565 9240', '7765 4029', 1);



 INSERT INTO tb_cliente
VALUES
(12,'Sr', 'Ricardo', 'Cunha', 'Rua Jose Fortunato de Godoy', '889', NULL,
'13976', 'Itapira', 'SP', '5467 1959', '9244 9584', 1),

(13,'Sra', 'Laura', 'Batista', 'Rua Villa Lobos', '76', NULL,
 '13976 018', 'Ribeirão Preto', 'SP', '2111 8710', '9991 2324', 1),

(14,'Sr', 'Valmil', 'Feliciano', 'Rua Professor Emilton Amaral', '961', 'Loteamento Novo Horizonte',
'58053 223', 'João Pessoa', 'PB', '4431 8740', '9766 0033', 1),

(15,'Sr', 'Agnaldo', 'Aparecido', 'Rua Soldado Celoi Tonelli', '778', NULL,
 '09240 320', 'Santo André', 'SP', '2386 8092', '99625 3683', 1);





INSERT INTO tb_item(id_item, ds_item, preco_custo, preco_venda, fg_ativo)
 VALUES
 (1, 'Quebra-cabeça de Madeira', 15.23, 21.95, 1),
 (2, 'Cubo X', 7.45, 11.49, 1),
 (3, 'CD Linux', 1.99, 2.49, 1),
 (4, 'Tecidos', 2.11, 3.99, 1),
 (5, 'Moldura', 7.54, 9.95, 1),
 (6, 'Ventilador Pequeno', 9.23, 15.75, 1);



INSERT INTO tb_item(id_item, ds_item, preco_custo, preco_venda, fg_ativo)
 VALUES
 (7, 'Ventilador Grande', 13.36, 19.95, 1),
 (8, 'Escova de Dentes', 0.75, 1.45, 1),
 (9, 'Papel A4', 2.34, 2.45, 1),
 (10, 'Saco de Transporte', 0.01, 0.0, 1),
 (11, 'Alto-Falantes', 19.73, 25.32, 1);



INSERT INTO  tb_pedido(id_pedido, id_cliente, dt_compra, dt_entrega, valor, fg_ativo)
VALUES
(1,3, '13-03-2013', '17-03-2013', 2.99, 1),
(2, 8, '23-06-2013', '24-06-2013', 0.00, 1),
(3, 15, '02-09-2013', '12-09-2013', 3.99, 1),
(4, 13, '03-09-2013', '10-09-2013', 2.99, 1),
(5, 8, '21-07-2013', '24-07-2013', 0.00, 1);



INSERT INTO tb_item_pedido(id_pedido, id_item, quantidade)
VALUES
(1, 4, 1),
(1, 7, 1),
(1, 9, 1),
(2, 1, 1),
(2, 10, 1),
(2, 7, 2);



INSERT INTO tb_item_pedido(id_pedido, id_item, quantidade)
VALUES
(2, 4, 2),
(3, 2, 1),
(3, 1, 1),
(4, 5, 2),
(5, 1, 1),
(5, 3, 1);



INSERT INTO tb_codigo_barras(codigo_barras, id_item)
VALUES
(624152783, 1),
(624157463, 2),
(626453783, 3),
(624152774, 3),
(746574384, 4),
(345345867, 5),
(643456456, 6);



INSERT INTO tb_codigo_barras(codigo_barras, id_item)

VALUES
(847673683, 7),
(624123458, 8),
(947362553, 8),
(947362746, 8),
(458726364, 9),
(987987983, 11),
(23987237, 11);


INSERT INTO tb_estoque(id_item, quantidade)

VALUES
(1,12),
(2,2),
(4,8),
(5,3),
(7, 8),
(8, 18),
(10, 1);




SELECT inet_server_port();

SELECT current_database();

SELECT current_user;

SELECT inet_client_addr(); 


 SELECT cidade AS "Cidade do Cliente",
 	sobrenome AS "Sobrenome do Cliente"
 FROM tb_cliente tc;


SELECT cidade "Cidade do Cliente",
	sobrenome "Sobrenome do Cliente"
FROM tb_cliente tc 
ORDER BY cidade DESC, sobrenome ASC;


SELECT sobrenome
FROM tb_cliente 
ORDER BY 1;

SELECT ds_item, preco_custo
FROM tb_item
ORDER BY 1;

SELECT ds_item, preco_custo,
	preco_custo * 100 AS RESULTADO
FROM tb_item
ORDER BY 1;

SELECT ds_item, preco_custo,
	CAST((preco_custo * 100)AS INT)AS"Preço de Custo"
FROM tb_item
ORDER BY 1;




SELECT sobrenome AS "Sobrenome do Cliente",
	Cidade AS "Cidade do Cliente"
FROM tb_cliente
WHERE cidade = 'São Paulo';


SELECT sobrenome AS "Sobrenome do Cliente",
	cidade AS "Cidade do Cliente"
FROM tb_cliente
WHERE titulo <> 'Sra'
AND(cidade = 'Sertãozinho' OR cidade = 'São Paulo');


SELECT sobrenome AS "Sobrenome do Cliente",
	cidade AS "Cidade do Cliente"
FROM tb_cliente
WHERE cidade = 'São Paulo'
OR cidade = 'Sorocaba';



select id_cliente, nome
from tb_cliente
where nome between 'A' and 'D';


select id_cliente, nome
from tb_cliente
where nome like '%e';


select id_cliente, nome
from tb_cliente
where nome like '____';


select id_cliente, nome
from tb_cliente
where nome like '_a%';

select id_cliente, nome
from tb_cliente
where nome ilike '_A%'; //ilike n faz diferença de letra maiuscula ou minuscula


select id_cliente, nome
from tb_cliente
limit 5;

select id_cliente, nome
from tb_cliente
limit 8 offset 2; //offset serve para pular tuplas na tabela


select*
from tb_teste
where coluna_a is null; //colocar "is" no lugar de "="

select*
from tb_teste
where coluna_a is not null;//achar os valores na tabela q n são nulos


select cast('2023/08/30' as date); //converter a string para data

select cast ('2023/08/30' as timestamp); // mostrar o horario 


select*
from tb_pedido
where date_part('month', dt_compra) = 0; //mostrar apenas tuplas de uma determinada data


select*
from tb_pedido
where dt_compra >= cast ('2013 07 21' as date); //data compra menor ou igual a aquela

select now(), current_timestamp; //selecionar a data de agr

select dt_entrega - dt_compra as intervalo //mostra os dias entre a compra e a data de entrega 
from tb_pedido; 


select id_cliente
from tb_cliente
where nome = 'Anna' and sobrenome = 'Kelly'; //recuperar o id do cliente


select*
from tb_pedido
where id_cliente = 8; //recuperar pedidos do cliente com determinado id


select tb_cliente.nome, tb_pedido.dt_compra 
from tb_cliente, tb_pedido
where tb_cliente.id_cliente  = tb_pedido.id_cliente //where e a condição para que funcione 
and tb_cliente.id_cliente = 8; //selecionar com apenas um comando




select tb_cliente.nome, tb_pedido.dt_compra 
from tb_cliente, tb_pedido
where tb_cliente.id_cliente = tb_pedido.id_cliente 
and tb_cliente.nome = 'Agnaldo' //vai localiza a tupla q possui esse nome 
and tb_cliente.sobrenome = 'Aparecido';


select ds_item, preco_custo, codigo_barras
from tb_item, tb_codigo_barras
where tb_codigo_barras.id_item  = tb_item.id_item 
order by 2;



select c.nome, p.dt_compra //utilizando apelidos para utilizar as tabelas
from tb_cliente c, tb_pedido p
where  c.id_cliente  = p.id_cliente 
and c.nome = 'Anna'
and c.sobrenome = 'Kelly';



select c.nome, p.dt_compra //mesma coisa porém utilizando inner join
from tb_cliente c
inner join tb_pedido p  on (c.id_cliente = p.id_cliente)
where c.nome = 'Anna'
and c.sobrenome = 'Kelly';


select c.nome, p.dt_compra, ip.id_item, ip.quantidade //modo antigo
from tb_cliente c, tb_pedido p, tb_item_pedido ip
where c.id_cliente = p.id_cliente 
and p.id_pedido  = ip.id_pedido 
and c.nome = 'Anna'
and c.sobrenome = 'Kelly';


select c.nome, p.dt_compra, ip.id_item , ip.quantidade //forma nova de se escrever
from tb_cliente c
inner join tb_pedido p on (c.id_cliente = p.id_cliente)
inner join tb_item_pedido ip on (p.id_pedido = ip.id_pedido)
where c.nome = 'Anna'
and c.sobrenome = 'Kelly';




select c.nome, p.dt_compra, ip.id_item,i.ds_item, ip.quantidade //forma antiga
from tb_cliente c, tb_pedido p, tb_item_pedido ip, tb_item i
where c.id_cliente = p.id_cliente 
and p.id_pedido  = ip.id_pedido 
and ip.id_item = i.id_item
and c.nome = 'Anna'
and c.sobrenome = 'Kelly';




select c.nome, p.dt_compra, ip.id_item, //forma nova
	i.ds_item, ip.quantidade
from tb_cliente c
inner join tb_pedido p on (c.id_cliente = p.id_cliente)
inner join tb_item_pedido ip on (p.id_pedido = ip.id_pedido)
inner join tb_item i on (ip.id_item = i.id_item)
where c.nome = 'Anna'and
	c.sobrenome = 'Kelly';


select preco_custo , ds_item
from tb_item
where preco_custo = (select max(preco_custo ) from tb_item); // pega o item com o maior valor e a descrição dele



select cast(avg(preco_venda) as numeric(7,2)) as "Média"
from tb_item; //media com duas casasdecimais


create table tb_pessoas(
id_pessoas  INTEGER,
nm_pessoas  VARCHAR(60),
constraint fk_tb_pessoas_id_pessoas primary key (id_pessoas)
);

insert into tb_pessoas(id_pessoas, nm_pessoas)
values
(1, 'João'),
(2, 'João'),
(3, 'Maria'),
(4, 'Maria'),
(5, 'Pero'),
(6, 'Rafael'),
(7, 'Marina'),
(8, 'Pedro');

create table tb_parte(
id_parte			INTEGER,
descricao			VARCHAR(32),
id_parte_principal	INTEGER,
primary key(id_parte),
foreign key(id_parte_principal) references tb_parte(id_parte)
);

insert into tb_parte
values
(1, 'Mesa e Cadeira', NULL),
(2, 'Cadeira', 1),
(3, 'Mesa', 1);

select p1.descricao as "Combinacao",
	   p2.descricao as "Partes"
from tb_parte p1, tb_parte p2
where p1.id_parte = p2.id_parte_principal;

select nome, sobrenome
from tb_cliente
where sobrenome similar to '%(Matheus|Mendes)%';

select nome, sobrenome
from tb_cliente
where nome similar to '(S|A)%';


select
(select min(preco_venda)from tb_item) as Menor,
(select max(preco_venda)from tb_item) as maior,
(select avg(preco_venda)from tb_item) as Média;

create tablespace tablespace_01
location 'C://tablespace_postgresql';

create table tb_test_tablespace(
col_2		INTEGER)
tablespace tablespace_01;

insert into tb_test_tablespace
values
(generate_series(1, 1000));

select*
from tb_test_tablespace;
